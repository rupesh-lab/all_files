#include <iostream>
using namespace std;

void cycle(int arr[], int n, int pointer) {
    arr[pointer] = 0;

    if (pointer == n - 1) {
        int temp[50]; // Temporary array to store rearranged elements

        temp[0] = arr[0]; // Preserve the first element
        temp[1] = arr[n - 1]; // Move the last element to the second position

        // Reassign the rest of the elements
        for (int i = 2; i < n / 2 + 1; i++) {
            temp[i] = arr[(i - 1) * 2];
        }

        // Copy back to original array
        for (int i = 0; i < n / 2 + 1; i++) {
            arr[i] = temp[i];
        }

        for (int i = 0; i < n / 2 + 1; i++) {
            cout << arr[i] << " ";
        }
        cout << endl;

        if (n / 2 + 1 == 2) {
            return;
        }

        pointer = 1;
        cycle(arr, n / 2 + 1, pointer);  // Recurse with a reduced size
    } 
    else if (pointer == n) {
        int temp[50]; // Temporary array to store rearranged elements

        temp[0] = arr[n - 1]; // Move the last element to the first position

        // Reassign the rest of the elements
        for (int i = 1; i <= n / 2; i++) {
            temp[i] = arr[(i - 1) * 2];
        }

        // Copy back to original array
        for (int i = 0; i <= n / 2; i++) {
            arr[i] = temp[i];
        }

        for (int i = 0; i <= n / 2; i++) {
            cout << arr[i] << " ";
        }
        cout << endl;

        if (n / 2 + 1 == 2) {
            return;
        }

        pointer = 1;
        cycle(arr, n / 2 + 1, pointer);  // Recurse with a reduced size
    } 
    else {
        cycle(arr, n, pointer + 2);  // Continue with the next pointer
    }
}

int main() {
    int arr[50];
    int n;
    cin >> n;

    for (int i = 0; i < n; i++) {
        arr[i] = i + 1;
    }

    for (int i = 0; i < n; i++) {
        cout << arr[i] << " ";
    }
    cout << endl;

    int pointer = 1;
    cycle(arr, n, pointer);

    return 0;
}
